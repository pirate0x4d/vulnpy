options:
  pool:
    name: "projects/geotech-cybersecurity/locations/me-central2/workerPools/sonarqube-worker-pool"
  logging: CLOUD_LOGGING_ONLY

steps:
  - name: 'sonarsource/sonar-scanner-cli'
    # We MUST use a shell to expand the secret variables.
    entrypoint: 'sh'
    secretEnv:
      - 'SONAR_HOST_URL'
      - 'SONAR_LOGIN_TOKEN'
    args:
      - -c
      - |
        # This command will now run inside a shell with enough memory.
        # We use the $$VAR syntax to pass the variables through the validator to the shell.
        sonar-scanner \
          -Dsonar.projectKey=pirate0x4d_vulnpy_e23b31f4-6b77-4104-bddb-15b03db2245b \
          -Dsonar.sources=. \
          -Dsonar.host.url=$$SONAR_HOST_URL \
          -Dsonar.login=$$SONAR_LOGIN_TOKEN \
          -Dsonar.branch.name=${_BRANCH_NAME} \
          -Dsonar.working.directory=/tmp/.scannerwork

# This block tells Cloud Build to fetch the specified secrets from Secret Manager.
availableSecrets:
  secretManager:
    - versionName: projects/geotech-cybersecurity/secrets/SONAR_HOST_URL/versions/latest
      env: 'SONAR_HOST_URL'
    - versionName: projects/geotech-cybersecurity/secrets/SONAR_LOGIN_TOKEN/versions/latest
      env: 'SONAR_LOGIN_TOKEN'

# This block defines user-defined variables.
substitutions:
  _BRANCH_NAME: 'master'
